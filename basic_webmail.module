<?php
/**
 * @file
 * This is the main code file for the Basic webmail module.
 * All the Drupal hook implementations are in here.
 */

/**
 * Implements hook_help().
 */
function basic_webmail_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'admin/config/basic_webmail':
      $output = t('Send and receive email through an IMAP mail server.');
      break;
  }

  return $output;
}


/**
 * Implements hook_permission().
 */
function basic_webmail_permission() {
  return array(
    'administer basic_webmail' => array(
      'title' => t('Administer basic_webmail'),
      'description' => 'Perform administration tasks for Basic webmail.',
    ),
    'access basic_webmail' => array(
      'title' => t('Access basic_webmail'),
      'description' => 'Use Basic webmail',
    ),
    "access users' email addresses" => array(
      'title' => t("Access users' email addresses"),
      'description' => 'This permission gives anyone sending an email with Basic webamil access to the email addresses of all active users registered on this website.',
    ),
    'basic webmail override text format' => array(
      'title' => t('Override default text format'),
      'description' => t("Allows the message sender to override the message body's default text format when creating the message."),
    ),
    'basic webmail include attachments' => array(
      'title' => t('Attach files to messages'),
      'description' => t('Allows the message sender to include attachments with the message.'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function basic_webmail_menu() {
  $items = array();

  // Admin settings.
  $items['admin/config/system/basic_webmail'] = array(
    'title' => 'Basic webmail',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('basic_webmail_admin_settings'),
    'access arguments' => array('administer basic_webmail'),
    'description' => 'Configure the mail server.',
    'file' => 'basic_webmail.admin.inc',
  );

  if(variable_get('basic_webmail_disable_email_menu', 0) == 0) {
    // The main email listing page (the inbox).
    $items['basic_webmail'] = array(
      'title' => 'Email',
      'page callback' => 'basic_webmail_message_list',
      'description' => 'Send and/or receive email.',
      'access arguments' => array('access basic_webmail'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'basic_webmail.list.inc',
    );
  } 

  // The message list page.
  $items['basic_webmail/list/%'] = array(
    'page callback' => 'basic_webmail_message_list',
    'page arguments' => array(2),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.list.inc',
  );

  // The arguments for the next four menu items are the folder and the message
  // number.
  // The message view page.
  $items['basic_webmail/view/%/%'] = array(
    'page callback' => 'basic_webmail_message',
    'page arguments' => array(2, 3),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.view.inc',
  );

  // The copy message page.
  $items['basic_webmail/copy/%/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_basic_webmail_copy_message_form', 2, 3),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.view.inc',
  );
  // The delete message confirmation page.
  $items['basic_webmail/delete/%/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_basic_webmail_delete_message_form', 2, 3),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.view.inc',
  );
  // The move message page.
  $items['basic_webmail/move/%/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_basic_webmail_move_message_form', 2, 3),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.view.inc',
  );

  // The compose message page.
  $items['basic_webmail/sendmail'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_basic_webmail_send_mail_form'),
    'access arguments' => array('access basic_webmail'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.edit.inc',
  );

  // Show email matches when filling in the forms.
  $items['basic_webmail/autocomplete'] = array(
    'title' => 'Basic webmail autocomplete',
    'page callback' => 'basic_webmail_autocomplete',
    'access arguments' => array("access users' email addresses"),
    'type' => MENU_CALLBACK,
    'file' => 'basic_webmail.edit.inc',
  );

  return $items;
}


/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Modifies the user profile page to add the login ID and password fields.
 */
function basic_webmail_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  // If this is the user's account form, they are allowed to access Basic
  // webmail, and the administrator has chosen to collect the login ID and
  // password, then add the fields to the form.
  if ($form['#user_category'] == 'account' && user_access('access basic_webmail', $form['#user'])) {
    _basic_webmail_form_user_form($form);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Modifies the user registration page to add the login ID and password fields.
 */
function basic_webmail_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // If the user is allowed to access Basic webmail, and the administrator has
  // chosen to collect the login ID and password, then add the fields to the
  // form.
  if (user_access('access basic_webmail', $form['#user'])) {
    _basic_webmail_form_user_form($form);
  }
}

/**
 * The form parts to add to the user forms above.
 *
 * @param array $form
 *   The form to modify.
 */
function _basic_webmail_form_user_form(&$form) {
  $form['basic_webmail_email_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Basic webmail account settings'),
    '#collapsible' => TRUE,
    '#weight' => 1,
  );
  // If there is an existing email address specified, display it.
  $username = !empty($form['#user']->data['basic_webmail_username']) ? $form['#user']->data['basic_webmail_username'] : '';
  $form['basic_webmail_email_settings']['basic_webmail_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Email account login'),
    '#default_value' => $username,
    '#description' => 'The login ID of your email account.',
  );
  $form['basic_webmail_email_settings']['basic_webmail_password'] = array(
    '#type' => 'password_confirm',
    '#description' => 'The login password of your email account.',
  );
  
  // Verify if the option to allow the user overwrite the global settings is enabled
  if(variable_get('basic_webmail_enable_overwrite_server_settings') == 1) {
    $server_address = !empty($form['#user']->data['basic_webmail_server_address']) ? $form['#user']->data['basic_webmail_server_address'] : '';    
    // The server set of fields for the form.
    $form['basic_webmail_server_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Basic webmail server settings - Overwrite global settings'),
      '#collapsible' => TRUE,
      '#collapsed' => ($server_address == '') ? TRUE : FALSE,
      '#weight' => 2,
    );
    
    $form['basic_webmail_server_settings']['basic_webmail_server_address'] = array(
      '#type' => 'textfield',
      '#title' => t('Server address'),
      '#default_value' => $server_address,
      '#description' => t('The address to the server you wish to connect to. If you add a value in this field, this fieldset will overwrite the global settings defined by the admin.'),
    );
    $server_port = !empty($form['#user']->data['basic_webmail_server_port']) ? $form['#user']->data['basic_webmail_server_port'] : '143';
    $form['basic_webmail_server_settings']['basic_webmail_server_port'] = array(
      '#type' => 'textfield',
      '#title' => t('Connection port'),
      '#size' => 10,
      '#default_value' => $server_port,
      '#description' => t('The default IMAP port is 143, if one is not specified. If you are using SSL, the default port number is 993. If you are using TLS, the default port number is 143.'),
    );
    $server_secure_login = !empty($form['#user']->data['basic_webmail_secure_log_in']) ? $form['#user']->data['basic_webmail_secure_log_in'] : 0;
    $form['basic_webmail_server_settings']['basic_webmail_secure_log_in'] = array(
      '#type' => 'checkbox',
      '#title' => t('Secure login'),
      '#default_value' => $server_secure_login,
      '#description' => t('Check to make a secure connection to your IMAP Server.'),
    );
    $use_ssl = !empty($form['#user']->data['basic_webmail_use_ssl']) ? $form['#user']->data['basic_webmail_use_ssl'] : 0;
    $form['basic_webmail_server_settings']['basic_webmail_use_ssl'] = array(
      '#type' => 'checkbox',
      '#title' => t('Encrypt session using SSL'),
      '#default_value' => $use_ssl,
      '#description' => t('Use SSL to connect to the server.'),
    );
    $validate_cert = !empty($form['#user']->data['basic_webmail_validate_cert']) ? $form['#user']->data['basic_webmail_validate_cert'] : 0;
    $form['basic_webmail_server_settings']['basic_webmail_validate_cert'] = array(
      '#type' => 'checkbox',
      '#title' => t('Validate certificate'),
      '#default_value' => $validate_cert,
      '#description' => t('When using a secure connection, validate the certificate.'),
    );
    $use_tls = !empty($form['#user']->data['basic_webmail_use_tls']) ? $form['#user']->data['basic_webmail_use_tls'] : '143';
    $form['basic_webmail_server_settings']['basic_webmail_use_tls'] = array(
      '#type' => 'checkbox',
      '#title' => t('Encrypt session using TLS'),
      '#default_value' => $use_tls,
      '#description' => t('Use TLS to connect to the server.'),
    );
  }
}

/**
 * Implements hook_user_presave().
 */
function basic_webmail_user_presave(&$edit, $account, $category) {
  // Check to see if we need to save any information.
  if ($category == 'account' && user_access('access basic_webmail', $account)) {
    // Include the file that has the encrypt and decrypt functions in it.
    include_once drupal_get_path('module', 'basic_webmail') . '/basic_webmail.common.inc';
      
    // If the login ID has changed, but is not empty, save it.
    if (!empty($edit['basic_webmail_username'])) {
      if (empty($account->data['basic_webmail_username']) || ($account->data['basic_webmail_username'] != $edit['basic_webmail_username'])) {
        $edit['data']['basic_webmail_username'] = $edit['basic_webmail_username'];
      }
    }
    // Because it's empty by default when the form is shown, if there is
    // anything in the password field, save it.
    if (!empty($edit['basic_webmail_password'])) {
      $edit['data']['basic_webmail_password'] = _basic_webmail_encrypt_password($edit['basic_webmail_password']);
    }

    if(variable_get('basic_webmail_enable_overwrite_server_settings') == 1) {
      if (empty($account->data['basic_webmail_server_address']) || ($account->data['basic_webmail_server_address'] != $edit['basic_webmail_server_address'])) {
        $edit['data']['basic_webmail_server_address'] = $edit['basic_webmail_server_address'];
      }
      if (empty($account->data['basic_webmail_server_port']) || ($account->data['basic_webmail_server_port'] != $edit['basic_webmail_server_port'])) {
        $edit['data']['basic_webmail_server_port'] = $edit['basic_webmail_server_port'];
      }
      if (empty($account->data['basic_webmail_secure_log_in']) || ($account->data['basic_webmail_secure_log_in'] != $edit['basic_webmail_secure_log_in'])) {
        $edit['data']['basic_webmail_secure_log_in'] = $edit['basic_webmail_secure_log_in'];
      }
      if (empty($account->data['basic_webmail_use_ssl']) || ($account->data['basic_webmail_use_ssl'] != $edit['basic_webmail_use_ssl'])) {
        $edit['data']['basic_webmail_use_ssl'] = $edit['basic_webmail_use_ssl'];
      }
      if (empty($account->data['basic_webmail_validate_cert']) || ($account->data['basic_webmail_validate_cert'] != $edit['basic_webmail_validate_cert'])) {
        $edit['data']['basic_webmail_validate_cert'] = $edit['basic_webmail_validate_cert'];
      }
      if (empty($account->data['basic_webmail_use_tls']) || ($account->data['basic_webmail_use_tls'] != $edit['basic_webmail_use_tls'])) {
        $edit['data']['basic_webmail_use_tls'] = $edit['basic_webmail_use_tls'];
      }
    }  
  }
}


/**
 * Implements hook_mail().
 *
 * @param string $key
 *   An identifier of the mail.
 * @param array $message
 *   An array to be filled in. Elements in this array include:
 *   - id: An ID to identify the mail sent. Look at module source code or
 *     drupal_mail() for possible id values.
 *   - to: The address or addresses the message will be sent to. The formatting
 *     of this string must comply with RFC 2822.
 *   - subject: Subject of the e-mail to be sent. This must not contain any
 *     newline characters, or the mail may not be sent properly. drupal_mail()
 *     sets this to an empty string when the hook is invoked.
 *   - body: An array of lines containing the message to be sent. Drupal will
 *     format the correct line endings for you. drupal_mail() sets this to an
 *     empty array when the hook is invoked.
 *   - from: The address the message will be marked as being from, which is set
 *     by drupal_mail() to either a custom address or the site-wide default
 *     email address when the hook is invoked.
 *   - headers: Associative array containing mail headers, such as From, Sender,
 *     MIME-Version, Content-Type, etc. drupal_mail() pre-fills several headers
 *     in this array.
 * @param array $params
 *   An array of parameters supplied by the caller of drupal_mail().
 */
function basic_webmail_mail($key, &$message, $params) {
  if (!empty($params['headers'])) {
    foreach ($params['headers'] as $key => $value) {
      $message['headers'][$key] = $params['headers'][$key];
    }
  }
  $message['subject'] = $params['subject'];
  $message['body'] = $params['body'];
}


/**
 * Implements hook_theme().
 */
function basic_webmail_theme() {
  return array(
    'basic_webmail_mail_list_form' => array(
      'render element' => 'form',
    ),
    'basic_webmail_block_content_theme' => array(
      'template' => 'templates/block_content',
    )
  );
}

/**
 * Implement hook_block_info().
 */
function basic_webmail_block_info() {
  $blocks = array();
  
  if (variable_get('basic_webmail_enable_block', 0) == 1 &&  user_is_logged_in()) {
    $blocks['basic_webmail_block'] = array(
      'info' => t('Basic webmail viewer block')
      //'cache' => DRUPAL_CACHE_PER_ROLE -> Default
    );
  }  
  return $blocks;
}

/**
 * Implement hook_block_view().
 */
function basic_webmail_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'basic_webmail_block':
      $uri = explode('/', $_SERVER['REQUEST_URI']);
      if (variable_get('basic_webmail_enable_block', 0) == 1 &&  user_is_logged_in() && $uri[1] != 'basic_webmail') {
        include_once drupal_get_path('module', 'basic_webmail') . '/basic_webmail.list.inc';
        $block['subject'] = t('Webmail viewer');
        $block['content'] = _basic_webmail_block_content();
      }  
      break;
  }
  return $block;
}
